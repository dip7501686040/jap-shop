name: Kubernetes Deploy

on:
  workflow_run:
    workflows: ["Docker CI"]
    types:
      - completed
    branches:
      - dev
  workflow_dispatch:
  
jobs:
  deploy:
    name: Deploy to Kubernetes
    runs-on: self-hosted
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          sparse-checkout: k8s
          sparse-checkout-cone-mode: false

      - name: Download workflow artifact
        if: ${{ github.event_name == 'workflow_run' }}
        uses: actions/download-artifact@v4
        with:
          name: affected-apps
          path: artifacts  # Make sure this matches the path you're using below

      - name: Read affected apps
        id: affected
        run: |
          if [ "${{ github.event_name }}" == "workflow_run" ]; then
            FILE="artifacts/affected-apps.json"
            if [ ! -s "$FILE" ]; then
              echo "‚ùå Artifact file is missing or empty. Nothing to deploy."
              exit 0
            fi

            AFFECTED=$(cat $FILE)
            EMPTY=$(echo "$AFFECTED" | jq 'length == 0')
            if [ "$EMPTY" == "true" ]; then
              echo "‚úÖ No affected apps to deploy."
              exit 0
            fi
          else
            AFFECTED=$(find k8s/* -type d -maxdepth 0 | xargs -n1 basename | jq -R -s -c 'split("\n") | map(select(length > 0))')
          fi

          echo "Affected apps: $AFFECTED"
          echo "affected=$AFFECTED" >> $GITHUB_OUTPUT

      - name: Deploy affected apps to Kubernetes
        run: |
          AFFECTED=${{ steps.affected.outputs.affected }}
          echo "üîß Deploying apps: $AFFECTED"
          for app_name in $(echo "$AFFECTED" | jq -r '.[]'); do
            echo "‚û°Ô∏è Applying Kubernetes config for $app_name"
            kubectl apply -f k8s/$app_name

            echo "üîç Waiting for pods to be ready..."
            kubectl wait --for=condition=ready pods -l app=jap-shop-$app_name -n dev --timeout=300s || {
              echo "‚ö†Ô∏è Pods for $app_name are not ready. Skipping port-forward."
              continue
            }

            echo "üîÑ Port forwarding for $app_name"
            nohup kubectl port-forward svc/jap-shop-$app_name 3000:80 -n dev --address 0.0.0.0 &
          done
