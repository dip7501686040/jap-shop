name: Kubernetes Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - production
        
jobs:
  deploy:
    name: Deploy to Kubernetes
    runs-on: self-hosted
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2
        if: ${{ github.event_name == 'workflow_run' }}
        with:
          workflow: Docker CI
          run_id: ${{ github.event.workflow_run.id }}
          name: affected-apps
          path: ./artifacts
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          sparse-checkout: k8s
          sparse-checkout-cone-mode: false
      
      - name: Deploy namespace
        run: |
          ENVIRONMENT="${{ github.event.inputs.environment || 'dev' }}"
          if [ "$ENVIRONMENT" == "production" ]; then
            kubectl apply -f k8s/namespace-production.yml
          fi
      
      - name: Deploy affected apps to Kubernetes
        run: |
          ENVIRONMENT="${{ github.event.inputs.environment || 'dev' }}"
          if [ "${{ github.event_name }}" == "workflow_run" ]; then
            AFFECTED=$(cat ./artifacts/affected-apps.json)
          else
            # For manual runs, deploy all apps in k8s directory
            AFFECTED=$(find k8s/* -type d -maxdepth 0 | xargs -n1 basename | jq -R -s -c 'split("\n") | map(select(length > 0))')
          fi
          
          echo "Deploying apps to $ENVIRONMENT environment: $AFFECTED"
          for app_name in $(echo $AFFECTED | jq -r '.[]'); do
            if [ -d "k8s/$app_name" ]; then
              echo "Applying Kubernetes configuration for $app_name"
              if [ "$ENVIRONMENT" == "production" ]; then
                # Apply production-specific manifests if they exist
                kubectl apply -f k8s/$app_name/*-prod.yml 2>/dev/null || true
                kubectl apply -f k8s/$app_name/* -l namespace=production 2>/dev/null || true
              else
                # Apply dev manifests
                kubectl apply -f k8s/$app_name/* -l namespace!=production 2>/dev/null || true
                kubectl apply -f k8s/$app_name/* -l namespace=dev 2>/dev/null || true
              fi
            fi
          done
      
      - name: Deploy ingress
        if: ${{ github.event.inputs.environment == 'production' }}
        run: |
          echo "Applying ingress configuration for production"
          kubectl apply -f k8s/ingress/